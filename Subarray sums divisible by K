#include <vector>

class Solution {
public:
    int subarraysDivByK(std::vector<int>& nums, int k) {
        int n = nums.size();
        std::vector<int> prefixSums(n + 1, 0);

        // Compute prefix sums
        for (int i = 0; i < n; ++i) {
            prefixSums[i + 1] = prefixSums[i] + nums[i];
        }

        int count = 0;
        for (int i = 0; i <= n; ++i) {
            for (int j = i + 1; j <= n; ++j) {
                if ((prefixSums[j] - prefixSums[i]) % k == 0) {
                    count++;
                }
            }
        }

        return count;
    }
};

